@model Grone.MVC.ViewModel.CommentViewModel


    <form action="/Comment/AddComment" class="commentForm ng-pristine ng-valid" enctype="multipart/form-data" method="post">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Post Comment</h4>
            </div>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommentId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="CommentId" class="form-control" value="{{comment.Id}}" readonly />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="PostId" class="form-control" value="{{post.Id}}" readonly />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImgSrc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImgSrc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImgSrc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-default" data-dismiss="modal">CANCEL</button>
                        <input type="submit" value="POST" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
        </form>
